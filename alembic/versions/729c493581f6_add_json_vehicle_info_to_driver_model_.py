"""Add JSON vehicle_info to Driver model, remove duplicate columns - name and phone from drivers table

Revision ID: 729c493581f6
Revises: e1f29ef5f308
Create Date: 2025-03-30 18:35:29.722049

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '729c493581f6'
down_revision: Union[str, None] = 'e1f29ef5f308'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("ALTER TABLE drivers ALTER COLUMN vehicle_info TYPE JSON USING vehicle_info::json")

    op.drop_constraint('drivers_phone_key', 'drivers', type_='unique')
    op.create_unique_constraint(None, 'drivers', ['user_id'])
    op.drop_column('drivers', 'name')
    op.drop_column('drivers', 'phone')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('drivers', sa.Column('phone', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('drivers', sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'drivers', type_='unique')
    op.create_unique_constraint('drivers_phone_key', 'drivers', ['phone'])
    op.alter_column('drivers', 'vehicle_info',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               type_=sa.VARCHAR(),
               comment=None,
               existing_comment='Vehicle info as JSON: type, model, year, passenger_capacity, license_number',
               existing_nullable=True)
    # ### end Alembic commands ###
